name: Build and Publish Snapshot

env:
  GO_VERSION: '1.24.0'
  GO_LINTER_VERSION: 'v1.64.6'
  DOCKER_REGISTRY_ACCOUNT: ${{ vars.DOCKER_REGISTRY_ACCOUNT }}

on:
  schedule:
    - cron:  '20 20 * * *'
  workflow_dispatch:

jobs:
  nightly:
    runs-on: ubuntu-latest

    steps:
    - name: Extract service name from repo name
      run: echo "SERVICE_NAME=$(echo '${{ github.repository }}' | cut -d'/' -f2)" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Set up the Go environment
    - name: Setup Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: "${{ env.GO_VERSION }}"

    - name: Install Go linter
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
          sh -s -- -b $(go env GOPATH)/bin ${{ env.GO_LINTER_VERSION }}

    - name: Install oapi-codegen
      run: |
        go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Optionally, login to Docker repository
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      if: env.DOCKER_USERNAME != null
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and test the application (also lints)
    - name: Build project
      run: make all

    - name: Build and push Docker image
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.DOCKER_REGISTRY_ACCOUNT }}/${{ env.SERVICE_NAME }}:nightly
        build-args: |
          SERVICE_NAME=${{ env.SERVICE_NAME }}
          LOG_LEVEL=info
