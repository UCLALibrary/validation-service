name: Build and Publish Snapshot

env:
  GO_VERSION: '1.24.0'
  GO_LINTER_VERSION: 'v1.64.6'
  DOCKER_REGISTRY_ACCOUNT: ${{ vars.DOCKER_REGISTRY_ACCOUNT }}

on:
  schedule:
    - cron:  '20 20 * * *'
  workflow_dispatch:

jobs:
  nightly:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pat: [ "-ucla", "" ]

    steps:
    - name: Extract service name from repo name
      run: echo "SERVICE_NAME=$(echo '${{ github.repository }}' | cut -d'/' -f2)" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Set up the Go environment
    - name: Setup Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: "${{ env.GO_VERSION }}"

    - name: Install Go linter
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
          sh -s -- -b $(go env GOPATH)/bin ${{ env.GO_LINTER_VERSION }}

    - name: Install oapi-codegen
      run: |
        go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Optionally, login to Docker repository
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      if: env.DOCKER_USERNAME != null
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and test the application (also lints)
    - name: Build project
      run: make all

    - name: Set CREATE_KAKADU env variable
      run: |
        if [[ "${{ matrix.pat }}" == "-ucla" ]]; then
          echo "CREATE_KAKADU=true" >> $GITHUB_ENV
        fi
      shell: bash

    # Build the Docker image using Makefile and push image
    - name: Build Docker image and push
      run: |
        make docker-push \
          SERVICE_NAME=${{ env.SERVICE_NAME }} \
          VERSION=nightly \
          PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }} \
          ARCH=x86-64 \
          CREATE_KAKADU=${{ env.CREATE_KAKADU }}  \
          TAG=nightly \
          DOCKER_REPO=${{ env.SERVICE_NAME }}${{ matrix.pat}} \
          DOCKER_REGISTRY=${{ env.DOCKER_REGISTRY_ACCOUNT }}


